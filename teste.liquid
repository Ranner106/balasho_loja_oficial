<!-- sections/collections-list.liquid -->
<div class="t4s-section-inner transition duration-500 ease-in-out transform hover:scale-105 hover:shadow-lg">
    {{ 'section.css' | asset_url | stylesheet_tag }}
    {{ 'collection.css' | asset_url | stylesheet_tag }}
    {{ 'custom-effect.css' | asset_url | stylesheet_tag }}
    {{ 'slider-settings.css' | asset_url | stylesheet_tag }}
    {{ 'pre_flickityt4s.min.css' | asset_url | stylesheet_tag }}
    {%- liquid
      assign sid = section.id
      assign se_stts = section.settings
      assign se_blocks = section.blocks
      assign stt_layout = se_stts.layout
      assign stt_image_bg = se_stts.image_bg
      if stt_layout == 't4s-se-container' 
        assign html_layout = '<div class="t4s-container">__</div></div>' | split:'__'
      elsif stt_layout == 't4s-container-wrap'
        assign html_layout = '<div class="t4s-container">__</div>' | split:'__'
      else
        assign html_layout = '__' | split:'__'
      endif
      assign image_ratio = se_stts.image_ratio
      if image_ratio == "ratioadapt"
        assign imgatt = ''
       else 
        assign imgatt = 'data-'
      endif
      assign source = se_stts.source
      assign b_effect = se_stts.b_effect
      assign img_effect = se_stts.img_effect
      assign open_link = se_stts.open_link
      assign subtitle = se_stts.collection_subtitle
      if se_stts.btn_owl == "outline"
        assign arrow_icon = 1
      else
        assign arrow_icon = 2
      endif

      assign t4s_se_class = 't4s_nt_se_' |append:sid
      if se_stts.use_cus_css and se_stts.code_cus_css != blank
        render 'se_cus_css',code_cus_css:se_stts.code_cus_css,t4s_se_class:t4s_se_class
      endif 

      assign collection_des = se_stts.collection_des
      assign title_cl_pri       = se_stts.title_cl | color_extract: 'lightness'
      assign title_cl_hover_pri       = se_stts.title_cl_hover | color_extract: 'lightness'
      assign subtitle_cl_pri       = se_stts.subtitle_cl | color_extract: 'lightness'
      assign count_cl_pri       = se_stts.count_cl | color_extract: 'lightness'

      if title_cl_pri < 85  
        assign title_cl_sec = "#fff"
      else 
        assign title_cl_sec = "#222"
      endif
      if title_cl_hover_pri < 85 
        assign title_cl_hover_sec = "#fff"
      else 
        assign title_cl_hover_sec = "#222"
      endif
      if subtitle_cl_pri < 85 
        assign subtitle_cl_sec = "#fff"
      else 
        assign subtitle_cl_sec = "#222"
      endif
      if count_cl_pri < 85 
        assign count_cl_sec = "#fff"
      else 
        assign count_cl_sec = "#222"
      endif
      
    -%} 
    {{- html_layout[0] -}}
    {%- if stt_layout == 't4s-se-container' -%}<div class="t4s-container-inner{% if stt_image_bg != blank %} t4s-has-imgbg lazyloadt4s{% endif %}" {%- if stt_image_bg != blank -%} data-bgset="{{ stt_image_bg | image_url: width: 1 }}" data-sizes="auto" data-optimumx="1.5"{%- endif -%}>{%- endif -%}
    {%- render 'section_tophead',se_stts:se_stts -%}
    {%- if se_stts.layout_des == "1" -%}
      <div class="t4s-list-collections t4s-collection-border-{{se_stts.border}} t4s_{{image_ratio}} t4s_position_{{se_stts.image_position}} t4s_{{se_stts.image_size}} t4s-row t4s-justify-content-center t4s-row-cols-lg-{{se_stts.col_dk}} t4s-row-cols-md-{{se_stts.col_tb}} t4s-row-cols-{{se_stts.col_mb}} t4s-gx-md-{{se_stts.space_h_item}} t4s-gy-md-{{se_stts.space_v_item}} t4s-gx-{{se_stts.space_h_item_mb}} t4s-gy-{{se_stts.space_v_item_mb}}" style="--title-cl-pri: {{se_stts.title_cl}};--title-cl-pri-hover: {{se_stts.title_cl_hover}};--title-cl-second: {{title_cl_sec}};--title-cl-second-hover: {{title_cl_hover_sec}};--subtitle-cl: {{se_stts.subtitle_cl}};--subtitle-cl2: {{subtitle_cl_sec}};--count-cl-pri: {{se_stts.count_cl}};--count-cl-second: {{count_cl_sec}};--border-cl: {{se_stts.border_cl}};--item-rd: {{se_stts.item_rd}}%;--item-pd: {{se_stts.item_pd}}px;--space-bottom: {{se_stts.space_bottom}}px;--space-bottom-mb: {{se_stts.space_bottom_mb}}px;">
    {%- else -%}
      <div class="t4s-list-collections t4s-collection-border-{{se_stts.border}} t4s_{{image_ratio}} t4s_position_{{se_stts.image_position}} t4s_{{se_stts.image_size}} t4s-flicky-slider t4s-gx-md-{{se_stts.space_h_item}} t4s-gy-md-{{se_stts.space_v_item}} t4s-gx-{{se_stts.space_h_item_mb}} t4s-gy-{{se_stts.space_v_item_mb}} {% if se_stts.nav_btn %} t4s-slider-btn-style-{{se_stts.btn_owl}} t4s-slider-btn-pos-{{se_stts.btn_pos}} t4s-slider-btn-{{se_stts.btn_shape}} t4s-slider-btn-{{se_stts.btn_size}} t4s-slider-btn-cl-{{se_stts.btn_cl}} t4s-slider-btn-vi-{{se_stts.btn_vi}} t4s-slider-btn-hidden-mobile-{{se_stts.btn_hidden_mobile}} {% endif %} {% if se_stts.nav_dot == true %} t4s-dots-style-{{se_stts.dot_owl}} t4s-dots-cl-{{se_stts.dots_cl}} t4s-dots-round-{{se_stts.dots_round}} t4s-dots-hidden-mobile-{{se_stts.dots_hidden_mobile}} {%- endif -%} t4s-row t4s-row-cols-lg-{{se_stts.col_dk}} t4s-row-cols-md-{{se_stts.col_tb}} t4s-row-cols-{{se_stts.col_mb}} flickityt4s" data-flickityt4s-js='{"setPrevNextButtons":true, "arrowIcon":"{{arrow_icon}}","imagesLoaded": 0,"adaptiveHeight": 0, "contain": 1, "groupCells": "100%", "dragThreshold" : 5, "cellAlign": "left","wrapAround": {{se_stts.loop}},"prevNextButtons": {{se_stts.nav_btn}},"percentPosition": 1,"pageDots": {{se_stts.nav_dot}}, "autoPlay" : {{ se_stts.au_time | times: 1000 }}, "pauseAutoPlayOnHover" : {{se_stts.au_hover}} }' style="--title-cl-pri: {{se_stts.title_cl}};--title-cl-pri-hover: {{se_stts.title_cl_hover}}; --title-cl-second: {{title_cl_sec}};--title-cl-second-hover: {{title_cl_hover_sec}};--subtitle-cl: {{se_stts.subtitle_cl}};--subtitle-cl2: {{subtitle_cl_sec}};--count-cl-pri: {{se_stts.count_cl}};--count-cl-second: {{count_cl_sec}};--border-cl: {{se_stts.border_cl}};--item-rd: {{se_stts.item_rd}}%;--item-pd: {{se_stts.item_pd}}px;--space-bottom: {{se_stts.space_bottom}}px;--space-bottom-mb: {{se_stts.space_bottom_mb}}px;">
    {%- endif -%}

    {%- for block in section.blocks -%}
      {%- assign bk_stts = block.settings -%}
      {%- assign bk_id = block.id -%}
      {%- if bk_stts.collection != blank -%}
        {%- assign collection = collections[bk_stts.collection] -%}
        {%- if collection != blank -%}
          <div class="t4s-collection-item col transition duration-500 ease-in-out transform hover:scale-105 hover:shadow-lg">
            <div class="t4s-coll-block {%- if collection.image != blank -%} t4s-coll_has_image{% endif %}">
              {%- if collection.image != blank -%}
                <a class="t4s-coll_image t4s-ratio {{image_ratio}}" href="{{ collection.url }}" title="{{ collection.title }}">
                  {%- render 'lazy_image',image: collection.image, img_size: '540x' -%}
                  {%- if img_effect == true -%}
                    <div class="t4s-img-effect"></div>
                  {%- endif -%}
                </a>
              {%- else -%}
                <a class="t4s-coll_image t4s-ratio {{image_ratio}}" href="{{ collection.url }}" title="{{ collection.title }}">
                  <span class="t4s-ratio-content t4s-ratio-contain t4s-over-hidden">
                    <img class="lazyloadt4s" src="{{ 'no-image.svg' | asset_url }}" alt="{{ collection.title }}">
                  </span>
                </a>
              {%- endif -%}
              <div class="t4s-coll-content">
                <a href="{{ collection.url }}" title="{{ collection.title }}">
                  <h3 class="t4s-title">{{ collection.title | escape }}</h3>
                  {%- if subtitle == true -%}
                    <p class="t4s-subtitle">{{ bk_stts.collection_subtitle }}</p>
                  {%- endif -%}
                  {%- if bk_stts.count == true -%}
                    <p class="t4s-count t4s-mt__5">
                      <span>{{ collection.products_count }}</span> {{ 'products.general.label' | t }}
                    </p>
                  {%- endif -%}
                </a>
              </div>
            </div>
          </div>
        {%- endif -%}
      {%- endif -%}
    {%- endfor -%}
    </div>
    {{- html_layout[1] -}}
</div>
